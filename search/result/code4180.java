		}	}  private StructuredContentAssistant fContentAssistant = null;  public IContentAssistant getPHPContentAssistant(ISourceViewer sourceViewer) {  if (fContentAssistant == null) {  fContentAssistant = getPHPContentAssistantExtension();  if(fContentAssistant == null){  fContentAssistant = new StructuredContentAssistant(); 				}  // content assistant configurations  fContentAssistant.setDocumentPartitioning(getConfiguredDocumentPartitioning(sourceViewer));  fContentAssistant.enableAutoActivation(true);  fContentAssistant.setAutoActivationDelay(500);  fContentAssistant.setProposalPopupOrientation(IContentAssistant.PROPOSAL_OVERLAY);  fContentAssistant.setContextInformationPopupOrientation(IContentAssistant.CONTEXT_INFO_ABOVE);  fContentAssistant.setInformationControlCreator(getInformationControlCreator(sourceViewer));  // add content assist processors for each partition type  String[] types = getConfiguredContentTypes(sourceViewer);  for (int i = 0; i < types.length; i++) {  String type = types[i];  // add all content assist processors for current partiton type  IContentAssistProcessor[] processors = getContentAssistProcessors(sourceViewer, type);  if (processors != null) {  for (int j = 0; j < processors.length; j++) {  fContentAssistant.setContentAssistProcessor(processors[j], type); 						} 					} 				} 			}  return fContentAssistant; 		}  private StructuredContentAssistant getPHPContentAssistantExtension(){  StructuredContentAssistant rv = null;  String extensionName = "org.eclipse.php.ui.phpContentAssistant";  IConfigurationElement[] elements = Platform.getExtensionRegistry().getConfigurationElementsFor(extensionName);  for (int i = 0; i < elements.length; i++) {  IConfigurationElement element = elements[i];  if (element.getName().equals("contentAssistant")) {  ElementCreationProxy ecProxy = new ElementCreationProxy(element, extensionName);  StructuredContentAssistant contentAssistant = (StructuredContentAssistant)ecProxy.getObject();  if (contentAssistant != null) {  rv  = contentAssistant; 					} 				} 			}  return rv; 	   }  public String[] getDefaultPrefixes(ISourceViewer sourceViewer, String contentType) {  return new String[] { "//", "#", "" 
