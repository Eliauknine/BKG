  List<Map<String, Object>> taskMarkerAttributesMapList = new ArrayList<Map<String, Object>>();  for (LeafNode leafNode : event.getModel().getParseTreeRootNode() 				.getLeafNodes()) {  TaskTag taskTag = getTaskTag(leafNode);  if (null != taskTag) {  Map<String, Object> markerAttributesMap = new HashMap<String, Object>();  markerAttributesMap.put(IMarker.MESSAGE, leafNode.getText() 						.trim());  markerAttributesMap.put(IMarker.CHAR_START, leafNode 						.getOffset());  markerAttributesMap.put(IMarker.CHAR_END, leafNode.getOffset() 						+ leafNode.getLength());  if (PreferenceConstants.PRIORITY_HIGH.equalsIgnoreCase(taskTag 						.getPriority())) {  markerAttributesMap.put(IMarker.PRIORITY,  IMarker.PRIORITY_HIGH); 				} else if (PreferenceConstants.PRIORITY_NORMAL 						.equalsIgnoreCase(taskTag.getPriority())) {  markerAttributesMap.put(IMarker.PRIORITY,  IMarker.PRIORITY_NORMAL); 				} else {  markerAttributesMap.put(IMarker.PRIORITY,  IMarker.PRIORITY_LOW); 				}  markerAttributesMap.put(IMarker.LOCATION, this.resource 						.getLocationURI().toString());  markerAttributesMap.put(IMarker.LOCATION, "line " 						+ leafNode.getLine());  taskMarkerAttributesMapList.add(markerAttributesMap); 			} } }
