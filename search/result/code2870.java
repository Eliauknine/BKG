		}	}  /** 	 * {@inheritDoc} 	 *  	 * @see org.eclipse.compare.contentmergeviewer.TextMergeViewer#createToolItems(org.eclipse.jface.action.ToolBarManager) 	 */  @SuppressWarnings("restriction")  @Override  protected void createToolItems(ToolBarManager toolBarManager) {  // avoid super to avoid NPE in org.eclipse.compare.internal.ViewerDescriptor.createViewer  CompareHandlerService handlerService = CompareHandlerService.createFor(getCompareConfiguration() 				.getContainer(), getLeftSourceViewer().getSourceViewer().getControl().getShell());  setHandlerService(handlerService);  // Copy actions  CompareConfiguration cc = getCompareConfiguration();  if (cc.isRightEditable()) {  Action copyLeftToRight = new Action() {  @Override  public void run() {  copyDiff(true);  navigate(true); 				} 			};  Utilities.initAction(copyLeftToRight, getResourceBundle(), "action.CopyDiffLeftToRight.");   fCopyDiffLeftToRightItem = new ActionContributionItem(copyLeftToRight);  fCopyDiffLeftToRightItem.setVisible(true);  toolBarManager.appendToGroup("merge", fCopyDiffLeftToRightItem);   handlerService.registerAction(copyLeftToRight, "org.eclipse.compare.copyLeftToRight");  		}  if (cc.isLeftEditable()) {  Action copyRightToLeft = new Action() {  @Override  public void run() {  copyDiff(false);  navigate(true); 				} 			};  Utilities.initAction(copyRightToLeft, getResourceBundle(), "action.CopyDiffRightToLeft.");   fCopyDiffRightToLeftItem = new ActionContributionItem(copyRightToLeft);  fCopyDiffRightToLeftItem.setVisible(true);  toolBarManager.appendToGroup("merge", fCopyDiffRightToLeftItem);   handlerService.registerAction(copyRightToLeft, "org.eclipse.compare.copyRightToLeft");  		}  // Navigation  final Action nextDiff = new Action() {  @Override  public void run() {  endOfContentReached(true); 			} 		};  Utilities.initAction(nextDiff, getResourceBundle(), "action.NextDiff.");  ActionContributionItem contributionNextDiff = new ActionContributionItem(nextDiff);  contributionNextDiff.setVisible(true);  toolBarManager.appendToGroup("navigation", contributionNextDiff);  final Action previousDiff = new Action() {  @Override  public void run() {  endOfContentReached(false); 			} 		
