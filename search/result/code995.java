  this.editor = newEditor; if (this.editor) {  this.editor.addEventListener("DirtyChanged", this.editorDirtyListener = function() { //$NON-NLS-0$  this.activateContext.editorViewers.forEach(function(editorViewer){  editorViewer.updateDirtyIndicator();   });   }.bind(this));  }  },  updateDirtyIndicator: function(){  mGlobalCommands.setDirtyIndicator(this.editor.isDirty());  // Update the viewer's header  if (this.curFileNode) {  if (!this.dirtyIndicator) {  this.dirtyIndicator = document.createElement("span");  this.dirtyIndicator.classList.add("editorViewerHeaderDirtyIndicator");  this.dirtyIndicator.textContent = "*";  this.curFileNode.parentNode.insertBefore(this.dirtyIndicator, this.curFileNode);  }  this.dirtyIndicator.style.display = this.editor.isDirty() ? "block" : "none";  }  },  setInput: function(hash) {  this.inputManager.setInput(hash);  }
