  converters.remove(converter);	}  private EStructuralFeatureValueConverter getHighestRankingConverter(EObject eObject, EStructuralFeature feature,  Object value, Direction direction) {  double priority = EStructuralFeatureValueConverter.NOT_APPLICABLE;  EStructuralFeatureValueConverter highestRankingConverter = null;  for (final EStructuralFeatureValueConverter converter : converters) {  final double applicable = converter.isApplicable(eObject, feature, value, direction);  if (applicable == EStructuralFeatureValueConverter.NOT_APPLICABLE || applicable <= priority) {  continue; 			}  highestRankingConverter = converter;  priority = applicable; 		}  return highestRankingConverter; 	}
