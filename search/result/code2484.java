 protected IgnoreChoiceData getData() { return _data; 	}  /**    * The data that this dialog allows editing    */  public static class IgnoreChoiceData {  /** Whether differences on children must be covered */  private boolean _coverChildren;  /** Whether only differences on one side are concerned */  private boolean _sideExclusive;  /**      * Default constructor      */  public IgnoreChoiceData() {  _coverChildren = false;  _sideExclusive = false;     }  /**      * Full constructor      */  public IgnoreChoiceData(boolean coverChildren_p, boolean sideExclusive_p) {  _coverChildren = coverChildren_p;  _sideExclusive = sideExclusive_p;     }  /**      * Return whether differences on children must be covered      */  public boolean getCoverChildren() {  return _coverChildren;     }  /**      * Set whether differences on children must be covered      */  public void setCoverChildren(boolean newValue_p) {  _coverChildren = newValue_p;     }  /**      * Return whether differences on children must be covered      */  public boolean getSideExclusive() {  return _sideExclusive;     }  /**      * Set whether differences on children must be covered      */  public void setSideExclusive(boolean newValue_p) {  _sideExclusive = newValue_p;     }   } 
