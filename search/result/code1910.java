  // Since the element is in resource, we know the resource will be explored // because we assume all resource roots are reachable in the case of resource inclusion  boolean resourceChangedByInclusion = false;  resourceChangedByInclusion = !resourceChangedInList &&  _currentResource != null && _currentResource != candidateResource;  if (resourceChangedByInclusion && firstExploration)  notifyInclusion(_currentResource, candidateResource);  if (resourceAlreadyExplored && resourceChangedByInclusion) {  // Resource reached via inclusion but already visited: Skip element and its subtree  _contentIterator.prune();  candidateOK = false;             } }
