 if (ldpR == null) return Response.status(Status.NOT_FOUND).build(); // We don't allow changing an LDP-RS to an LDP-NR.  if (!(ldpR instanceof LDPNonRDFSource)) return Response.status(Status.CONFLICT).build();    ldpR.putUpdate(content, stripCharset(fRequestHeaders.getMediaType().toString()), null, fRequestHeaders);  return Response.status(Status.NO_CONTENT).build(); 	}  @POST  @Consumes({ LDPConstants.CT_APPLICATION_RDFXML, LDPConstants.CT_TEXT_TURTLE, LDPConstants.CT_APPLICATION_XTURTLE, LDPConstants.CT_APPLICATION_JSON, LDPConstants.CT_APPLICATION_LD_JSON })  public Response post(@HeaderParam(LDPConstants.HDR_SLUG) String slug, InputStream content) {  ILDPContainer ldpC = getRequestContainer();  String loc = ldpC.post(content, stripCharset(fRequestHeaders.getMediaType().toString()), null, slug, hasResourceTypeHeader(fRequestHeaders) );  if (loc != null)  return Response.status(Status.CREATED) 					.header(HttpHeaders.LOCATION, loc) 					.link(ldpC.getTypeURI(), LDPConstants.LINK_REL_TYPE).build();  else  return Response.status(Status.CONFLICT).build(); 	
