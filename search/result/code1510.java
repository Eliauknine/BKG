 define([{  } });  var toggleMaximizeCommand = new mCommands.Command({  name: messages['MaximizeCmd'],  tooltip: messages["MaximizeTip"],  id: "eclipse.orion.git.toggleMaximizeCommand", //$NON-NLS-0$  imageClass: "git-sprite-open", //$NON-NLS-0$  spriteClass: "gitCommandSprite", //$NON-NLS-0$  type: "toggle", //$NON-NLS-0$  callback: function(data) {  var diffContainer = lib.node(data.handler.options.parentDivId);  diffContainer.style.height = ""; //$NON-NLS-0$  var maximized = false;  var div = diffContainer.parentNode;  if (div.classList.contains("gitChangeListCompareMaximized")) { //$NON-NLS-0$  div.classList.remove("gitChangeListCompareMaximized"); //$NON-NLS-0$  diffContainer.classList.remove("gitChangeListCompareContainerMaximized"); //$NON-NLS-0$  } else {  div.classList.add("gitChangeListCompareMaximized"); //$NON-NLS-0$  diffContainer.classList.add("gitChangeListCompareContainerMaximized"); //$NON-NLS-0$  maximized = true;  }  data.handler.options.maximized = maximized;  if(data.handler.options.titleIds && data.handler.options.titleIds.length === 2) {  var dirtyIndicator = lib.node(data.handler.options.titleIds[1]); //$NON-NLS-0$  if ( dirtyIndicator) {  dirtyIndicator.textContent = data.handler.isDirty() && maximized ? "*" : "";  }  }  (data.handler._editors || [data.handler._editor]).forEach(function(editor) {  editor.resize();  });  },  visibleWhen: function() {  return true;  }  });  var okCancelOptions = {getSubmitName: function(){return messages.OK;}, getCancelName: function(){return messages.Cancel;}} 
