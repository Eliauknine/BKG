 public INode getNode(INode node, IProgressMonitor monitor) throws CoreException{  if (nodeResult == null) { nodeResult = delegate.getNode(node, monitor);  if (nodeResult != null) {  synchronized (cache) {  cache(nodeKey, nodeResult);  cache(computeNodeUrlKey(node), nodeResult);  cache(computeNodeIdUrlKey(node), nodeResult); 				} 			} 		}  return nodeResult; 	}  private void cache(String key, Object value) {  cache.put(key, new SoftReference<Object>(value, cacheReferenceQueue)); 	}  private <T> T getCached(String key, Class<T> type) { } 
