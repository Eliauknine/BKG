	 */ public List<AbstractOperation> removeAtEnd(int n) {  final List<AbstractOperation> ops = new ArrayList<AbstractOperation>();  final OperationEmitter operationEmitter = new OperationEmitter(Direction.Backward);  Optional<ReversedLinesFileReader> maybeReversedReader = Optional.absent();  int counter = n;  try {  final ReversedLinesFileReader reversedReader = new ReversedLinesFileReader(new File(getTempFilePath()));  maybeReversedReader = Optional.of(reversedReader);  AbstractOperation operation;  final ReadLineCapable reader = ReadLineCapable.INSTANCE.create(reversedReader);  final Optional<AbstractOperation> maybeOperation = operationEmitter.tryEmit(reader);  int removedOps = 0;  int removedLeafOps = 0; } } 
