  //add all locally installed items as well  boolean includeInstalled = false;  for (CatalogCategory category : getCategories()) {  if (category instanceof MarketplaceCategory) {  MarketplaceCategory marketplaceCategory = (MarketplaceCategory) category;  if (marketplaceCategory.getContents() == Contents.FEATURED) {  includeInstalled = true;  break; 				} 			} 		}  if (!includeInstalled) {  return updateCheckItems; 		}  updateCheckItems = new ArrayList<>(updateCheckItems);  Map<String, CatalogItem> itemsById = new HashMap<>();  for (CatalogItem catalogItem : updateCheckItems) {  itemsById.put(catalogItem.getId(), catalogItem); 		}  List<AbstractDiscoveryStrategy> discoveryStrategies = getDiscoveryStrategies();  SubMonitor progress = SubMonitor.convert(monitor, discoveryStrategies.size() * 1000);  for (AbstractDiscoveryStrategy discoveryStrategy : discoveryStrategies) {  if (monitor.isCanceled()) {  break; 			}  SubMonitor discoveryStrategyProgress = progress.newChild(1000);  if (discoveryStrategy instanceof MarketplaceDiscoveryStrategy) {  MarketplaceDiscoveryStrategy marketplaceDiscoveryStrategy = (MarketplaceDiscoveryStrategy) discoveryStrategy;  try {  performUpdateCheckDiscovery(marketplaceDiscoveryStrategy, updateCheckItems, itemsById,  discoveryStrategyProgress); 				} catch (CoreException e) {  MarketplaceClientUi.log(IStatus.INFO, Messages.MarketplaceCatalog_UpdateCheckDiscoveryError, e); 				} 			}  discoveryStrategyProgress.setWorkRemaining(0); 		}  return updateCheckItems; 	}  private void performUpdateCheckDiscovery(MarketplaceDiscoveryStrategy marketplaceDiscoveryStrategy,  List<CatalogItem> updateCheckItems, Map<String, CatalogItem> itemsById,  SubMonitor discoveryStrategyProgress) throws CoreException {  MarketplaceCategory catalogCategory = marketplaceDiscoveryStrategy 				.findMarketplaceCategory(discoveryStrategyProgress.newChild(1));  final Contents realContents = catalogCategory.getContents(); }
