  final ArrayList<AbstractChangePackage> changePackages = new ArrayList<AbstractChangePackage>(); changePackages.add(changes);  // final ArrayList<AbstractChangePackage> changePackages = new ArrayList<AbstractChangePackage>();  // // changePackages.add(changes);  //  // // TODO LCP: fully loading change packages to display them..  // final AbstractChangePackage cp = ChangePackageUtil.createChangePackage();  // // final FileBasedChangePackage cp = VersioningFactory.eINSTANCE.createFileBasedChangePackage();  // // cp.initialize(FileUtil.createLocationForTemporaryChangePackage());  // final ESCloseableIterable<AbstractOperation> operations = changes.operations();  // try {  // for (final AbstractOperation operation : operations.iterable()) {  // cp.add(operation);  // }  // } finally {  // operations.close();  // }  //  // changePackages.add(cp);  changesComposite = new TabbedChangesComposite(  contents, SWT.BORDER, changePackages, getActiveProjectSpace() 				.getProject(), idToEObjectMapping, true);  GridDataFactory.fillDefaults().align(SWT.FILL, SWT.FILL) 			.grab(true, true).span(2, 1).applyTo(changesComposite); }
