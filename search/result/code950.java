 ResourcesPlugin.getWorkspace().addResourceChangeListener(listener);	}  private ResourceSet createResourceSet() {  final ResourceSet resourceSet = new ResourceSetImpl();  final AdapterFactoryEditingDomain domain = new AdapterFactoryEditingDomain(  new ComposedAdapterFactory(new AdapterFactory[] {  new CustomReflectiveItemProviderAdapterFactory(),  new ComposedAdapterFactory(ComposedAdapterFactory.Descriptor.Registry.INSTANCE) }),  basicCommandStack, resourceSet);  resourceSet.eAdapters().add(  new AdapterFactoryEditingDomain.EditingDomainProvider(domain));  return resourceSet; 	}  @Override  public boolean isDirty() {  return basicCommandStack.isSaveNeeded(); 
