 protected synchronized CDOID getID(InternalCDOObject object, boolean onlyPersist{   { CDOID id = super.getID(object, onlyPersistedID);  // The super implementation will return null for transient (unattached) object;  // but in tx, an transient object may previously have been attached, so we consult  // the formerIDs -- unless this is being called indirectly through provideCDOID.  // The latter case occurs when deltas or revisions are being written out to stream; in  // which case null must be returned (for transients) so that the caller will detect   // dangling reference  if (!providingCDOID.get().booleanValue() && id == null)     {  CDORevisionKey revKey = formerRevisionKeys.get(object);  if (revKey != null)       {  id = revKey.getID(); } } } } 
