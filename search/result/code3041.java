  List<Lifeline> coveredLifelinesToAdd = new ArrayList<Lifeline>();  List<Lifeline> coveredLifelinesToRemove = new ArrayList<Lifeline>();  for(Object child : getParent().getChildren()) {  if(child instanceof LifelineEditPart) {  LifelineEditPart lifelineEditPart = (LifelineEditPart)child;  Lifeline lifeline = (Lifeline)lifelineEditPart.resolveSemanticElement();  if(newBound.intersects(lifelineEditPart.getFigure().getBounds())) {  if(!coveredLifelines.contains(lifeline)) {  coveredLifelinesToAdd.add(lifeline); 					} 				} else if(coveredLifelines.contains(lifeline)) {  coveredLifelinesToRemove.add(lifeline); 				} 			} 		}  if(!coveredLifelinesToAdd.isEmpty()) {  CommandHelper.executeCommandWithoutHistory(getEditingDomain(), AddCommand.create(getEditingDomain(), combinedFragment, UMLPackage.eINSTANCE.getInteractionFragment_Covered(), coveredLifelinesToAdd)); 		} }
