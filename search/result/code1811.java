  continue;			}  if (resource instanceof EMFStoreResource) {  final EMFStoreResource emfStoreResource = EMFStoreResource.class.cast(resource);  initializeMapping(emfStoreResource); 			} else {  final Set<EObject> modelElements = ModelUtil.getAllContainedModelElements(resource, false, false);  for (final EObject modelElement : modelElements) {  setModelElementIdOnResource((XMIResource) resource, modelElement); 				} 			}  try {  ESLocalProjectImpl.class.cast(localProject).toInternalAPI().getLocalChangePackage().save(); 			} catch (final IOException ex) {  ModelUtil.logError(ex.getMessage()); 			}  try {  ModelUtil.saveResource(resource, WorkspaceUtil.getResourceLogger()); 			} catch (final IOException e) {  // ignore exception 			} 		}  isDirty = false;  fireDirtyStateChangedNotification(); 	}
