/**  * <!-- begin-user-doc -->  * A representation of the literals of the enumeration '<em><b>Preemption</b></em>',  * and utility methods for working with them.  * <!-- end-user-doc -->  * <!-- begin-model-doc -->  * Preemption type for scheduling  * <!-- end-model-doc -->  * @see org.eclipse.app4mc.amalthea.model.AmaltheaPackage#getPreemption()  * @model  * @generated  */ public enum Preemption implements Enumerator {  /** 	 * The '<em><b>undefined </b></em>' literal object. 	 * <!-- begin-user-doc --> 	 * <!-- end-user-doc --> 	 * @see #_UNDEFINED__VALUE 	 * @generated 	 * @ordered 	 */  _UNDEFINED_(0, "_undefined_", "_undefined_"),  /** 	 * The '<em><b>Cooperative</b></em>' literal object. 	 * <!-- begin-user-doc --> 	 * <!-- end-user-doc --> 	 * @see #COOPERATIVE_VALUE 	 * @generated 	 * @ordered 	 */  COOPERATIVE(0, "cooperative", "cooperative"),  /** 	 * The '<em><b>Preemptive</b></em>' literal object. 	 * <!-- begin-user-doc --> 	 * <!-- end-user-doc --> 	 * @see #PREEMPTIVE_VALUE 	 * @generated 	 * @ordered 	 */  PREEMPTIVE(0, "preemptive", "preemptive"),  /** 	 * The '<em><b>Unknown</b></em>' literal object. 	 * <!-- begin-user-doc --> 	 * <!-- end-user-doc --> 	 * @see #UNKNOWN_VALUE 	 * @generated 	 * @ordered 	 */  UNKNOWN(0, "unknown", "unknown");  /** 	 * The '<em><b>undefined </b></em>' literal value. 	 * <!-- begin-user-doc --> 	 * <p> 	 * If the meaning of '<em><b>undefined </b></em>' literal object isn't clear, 	 * there really should be more of description here... 	 * </p> 	 * <!-- end-user-doc --> 	 * @see #_UNDEFINED_ 	 * @model name="_undefined_" 	 * @generated 	 * @ordered 	 */  public static final int _UNDEFINED__VALUE = 0;  /** 	 * The '<em><b>Cooperative</b></em>' literal value. 	 * <!-- begin-user-doc --> 	 * <p> 	 * If the meaning of '<em><b>Cooperative</b></em>' literal object isn't clear, 	 * there really should be more of description here... 	 * </p> 	 * <!-- end-user-doc --> 	 * @see #COOPERATIVE 	 * @model name="cooperative" 	 * @generated 	 * @ordered 	 */  public static final int COOPERATIVE_VALUE = 0;  /** 	 * The '<em><b>Preemptive</b></em>' literal value. 	 * <!-- begin-user-doc --> 	 * <p> 	 * If the meaning of '<em><b>Preemptive</b></em>' literal object isn't clear, 	 * there really should be more of description here... 	 * </p> 	 * <!-- end-user-doc --> 	 * @see #PREEMPTIVE 	 * @model name="preemptive" 	 * @generated 	 * @ordered 	 */  public static final int PREEMPTIVE_VALUE = 0;  /** 	 * The '<em><b>Unknown</b></em>' literal value. 	 * <!-- begin-user-doc --> 	 * <p> 	 * If the meaning of '<em><b>Unknown</b></em>' literal object isn't clear, 	 * there really should be more of description here... 	 * </p> 	 * <!-- end-user-doc --> 	 * @see #UNKNOWN 	 * @model name="unknown" 	 * @generated 	 * @ordered 	 */  public static final int UNKNOWN_VALUE = 0;  /** 	 * An array of all the '<em><b>Preemption</b></em>' enumerators. 	 * <!-- begin-user-doc --> 	 * <!-- end-user-doc --> 	 * @generated 	 */  private static final Preemption[] VALUES_ARRAY =  new Preemption[] {  _UNDEFINED_,  COOPERATIVE,  PREEMPTIVE,  UNKNOWN, 		};  /** 	 * A public read-only list of all the '<em><b>Preemption</b></em>' enumerators. 	 * <!-- begin-user-doc --> 	 * <!-- end-user-doc --> 	 * @generated 	 */  public static final List<Preemption> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));  /** 	 * Returns the '<em><b>Preemption</b></em>' literal with the specified literal value. 	 * <!-- begin-user-doc --> 	 * <!-- end-user-doc --> 	 * @param literal the literal. 	 * @return the matching enumerator or <code>null</code>. 	 * @generated 	 */  public static Preemption get(String literal) {  for (int i = 0; i < VALUES_ARRAY.length; ++i) {  Preemption result = VALUES_ARRAY[i];  if (result.toString().equals(literal)) {  return result; 			} } } } 
