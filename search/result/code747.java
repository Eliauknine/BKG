			}		} 	}  public void createAdapterType(final AdapterType adapterType, final Resource res) throws CreateFBTypeException {  ForteLuaExportFilter luaFilter = new ForteLuaExportFilter();  String luaSkript = luaFilter.createLUA(adapterType);  String request = MessageFormat.format(Messages.DTL_CreateAdapterType,  new Object[] { id++, adapterType.getName(), luaSkript });  try {  if (this.devMgmCommHandler instanceof EthernetDeviceManagementCommunicationHandler) {  String result = ((EthernetDeviceManagementCommunicationHandler) devMgmCommHandler).sendREQandRESP("", request);  if (result.contains("Reason")) {  throw new CreateFBTypeException("LUA skript for " + adapterType.getName() + " AdapterType not executed"); 				} else {  devMgmCommHandler.getAdapterTypes().add(adapterType.getName()); 				} 			} else {  sendREQ(res.getName(), request); 			} 		} catch (IOException e) {  e.printStackTrace(); 		} 	}  private void queryFBTypes(FB fb, Resource res){  if (null != devMgmCommHandler && null == devMgmCommHandler.getTypes()) {  String request = MessageFormat.format(Messages.DTL_QueryFBTypes,  new Object[] {id++});  try {  sendQUERY(res.getName(), request);  			} catch (IOException e) {  System.out.println(MessageFormat.format(Messages.DTL_QueryFailed,  new Object[] {"FB Types"})); 			} 		}  FBType fbType = fb.getFBType();  try {  createFBType(fbType, res); 		} catch (CreateFBTypeException ce) {  System.out.println(MessageFormat.format(Messages.DTL_CreateTypeFailed,  new Object[] {fbType.getName()})); 		} 	}    private void queryAdapterTypes(HashMap<String, AdapterType> adapters, Resource res){  if (null != devMgmCommHandler && null == devMgmCommHandler.getAdapterTypes()) {  String request = MessageFormat.format(Messages.DTL_QueryAdapterTypes,  new Object[] {id++});  try {  sendQUERY(res.getName(), request); 			} catch (IOException e1) {  System.out.println(MessageFormat.format(Messages.DTL_QueryFailed,  new Object[] {"Adapter Types"})); 			} 		}  adapters.keySet().forEach((e)->{  if(!devMgmCommHandler.getAdapterTypes().contains(e)) {  try {  createAdapterType(adapters.get(e), res); 				} catch (CreateFBTypeException ce) {  System.out.println(MessageFormat.format(Messages.DTL_CreateTypeFailed,  new Object[] {e})); 				} 			
