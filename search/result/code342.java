eval($logger);class PHPUnitEclipseLogger {    private $status;    private $exception;    private $time;    private $warnings;    private $varx;    /**      * data provider support - enumerates the test cases      */  private $dataProviderNumerator = - 1;    public function __construct()     {  $this->cleanTest();    $port = isset($_SERVER['PHPUNIT_PORT']) ? $_SERVER['PHPUNIT_PORT'] : 7478;  $this->out = fsockopen('127.0.0.1', $port, $errno, $errstr, 5);     }    public function startTestSuite(TestSuite $suite)     {  $this->writeTest($suite, 'start');     }    public function startTest(Test $test)     {  ZendPHPUnitErrorHandlerTracer::getInstance()->start();  $this->cleanTest();  $this->writeTest($test, 'start', true);     }    public function addError(Test $test, $e, $time)     {  $this->status = 'error';  $this->exception = $e;     }    public function addWarning(Test $test, Warning $e, $time)     {  $this->status = 'warning';  $this->exception = $e;     }    public function addFailure(Test $test, AssertionFailedError $e, $time)     {  $this->status = 'fail';  $this->exception = $e;     }    public function addIncompleteTest(Test $test, $e, $time)     {  $this->status = 'incomplete';  $this->exception = $e;     }    public function addSkippedTest(Test $test, $e, $time)     {  $this->status = 'skip';  $this->exception = $e;     }    public function endTest(Test $test, $time)     {  $this->warnings = ZendPHPUnitErrorHandlerTracer::getInstance()->stop();  $this->time = $time;  $this->writeTest($test, $this->status);     }    public function endTestSuite(TestSuite $suite)     {  $this->writeTest($suite, 'end');     }    public function addRiskyTest(Test $test, $e, $time)     {}    public function flush()     {     }    public function getWrappedTrace($e)     {  if ($e->getPrevious() != null) { } } } 
