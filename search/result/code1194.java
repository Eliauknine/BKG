  xViewer.getColumnText(element, xViewer.getCustomizeMgr().getColumnNumFromXViewerColumn(xCol)); if (cellStr != null) {  matcher = colIdToPattern.get(xCol.getId()).matcher(cellStr);  if (!matcher.find()) {  return false;                   }                }             }  if (colIdToDateFilter.containsKey(xCol.getId())) {  String cellStr =  xViewer.getColumnText(element, xViewer.getCustomizeMgr().getColumnNumFromXViewerColumn(xCol));  if (Strings.isValid(cellStr)) {  Date cellDate = XViewerSorter.parseDatePair(cellStr, "").getFirst();  if (cellDate != null) {  ColumnDateFilter columnDateFilter = colIdToDateFilter.get(xCol.getId());  Calendar cellCal = Calendar.getInstance();  cellCal.setTime(cellDate);  Calendar filterCal = Calendar.getInstance();  Date filterDate1 = columnDateFilter.getDate1();  filterCal.setTime(filterDate1);  DateRangeType rangeType = columnDateFilter.getType();  if (rangeType == DateRangeType.Equals_Date) {  if (cellCal.get(Calendar.YEAR) != filterCal.get(Calendar.YEAR) || cellCal.get(  Calendar.MONTH) != filterCal.get(Calendar.MONTH) || cellCal.get(  Calendar.DAY_OF_MONTH) != filterCal.get(Calendar.DAY_OF_MONTH)) {  return false;                         }                      } else if (rangeType == DateRangeType.After_Date && cellDate.before(filterDate1)) {  return false;                      } else if (rangeType == DateRangeType.Before_Date && cellDate.after(filterDate1)) {  return false;                      } else if (rangeType == DateRangeType.Between_Dates) {  if (cellDate.before(filterDate1)) {  return false;                         }  Date filterDate2 = columnDateFilter.getDate2();  if (cellDate.after(filterDate2)) {  return false;                         }                      }                   }  } else {  // Do not show this row if date filter selected and no date is shown  return false;                }             }
