/** * @author Eike Stepper  */ public class DBStoreAccessor implements IDBStoreAccessor {  private static final ContextTracer TRACER = new ContextTracer(OM.DEBUG, DBStoreAccessor.class);  private DBStore store;  private Object context;  private boolean reader;  private Connection connection;  private Statement statement;  private DBStoreAccessor(DBStore store, Object context, boolean reader) throws DBException   {  this.store = store;  this.context = context;   this.reader = reader;  try     {  connection = store.getConnectionProvider().getConnection();  connection.setAutoCommit(reader);     }  catch (SQLException ex)     {  throw new DBException(ex);     }   }  public DBStoreAccessor(DBStore store, ISession session) throws DBException   {  this(store, session, true);   }  public DBStoreAccessor(DBStore store, IView view) throws DBException   {  this(store, view, false);   }  public void release() throws DBException   {  try     {  if (!reader)       {  connection.commit();       } } } } 
