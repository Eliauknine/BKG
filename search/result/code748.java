import org.eclipse.fordiac.ide.model.libraryElement.AdapterType;import org.eclipse.fordiac.ide.model.libraryElement.BasicFBType; import org.eclipse.fordiac.ide.model.libraryElement.CompositeFBType; import org.eclipse.fordiac.ide.model.libraryElement.FB; import org.eclipse.fordiac.ide.model.libraryElement.FBType; import org.eclipse.fordiac.ide.model.libraryElement.InterfaceList; import org.eclipse.fordiac.ide.model.libraryElement.Resource; public class DynamicTypeLoad_DeploymentExecutor extends DeploymentExecutor {  private static final String PROFILE_NAME = "DynamicTypeLoad";     public DynamicTypeLoad_DeploymentExecutor() {  super(); 	}    @Override  public String getProfileName(){  return PROFILE_NAME; 	}    @Override  public void createFBInstance(final FB fb, final Resource res) throws CreateFBInstanceException {  // check first if FBType exists  HashMap<String, AdapterType> adapters = getAdapterTypes(fb.getFBType().getInterfaceList());  if(!adapters.isEmpty()){  queryAdapterTypes(adapters, res); 		}  queryFBTypes(fb, res);  super.createFBInstance(fb, res); 	}  private HashMap<String, AdapterType> getAdapterTypes(InterfaceList interfaceList){  HashMap<String, AdapterType> list = new HashMap<String, AdapterType>();  interfaceList.getPlugs().forEach((e)->list.put(e.getTypeName(), (AdapterType)EcoreUtil.copy(e.getType())));  interfaceList.getSockets().forEach((e)->list.put(e.getTypeName(), (AdapterType)EcoreUtil.copy(e.getType())));  return list; 	}    public void createFBType(final FBType fbType, final Resource res) throws CreateFBTypeException {  if ((fbType instanceof BasicFBType || fbType instanceof CompositeFBType)  				&& (null == devMgmCommHandler.getTypes() || !devMgmCommHandler.getTypes().contains(fbType.getName()))) {  ForteLuaExportFilter luaFilter = new ForteLuaExportFilter();  String luaSkript = luaFilter.createLUA(fbType);  String request = MessageFormat.format(Messages.DTL_CreateFBType,  new Object[] { id++, fbType.getName(), luaSkript });  try {  if (this.devMgmCommHandler instanceof EthernetDeviceManagementCommunicationHandler) {  String result = ((EthernetDeviceManagementCommunicationHandler)devMgmCommHandler) 							.sendREQandRESP("", request);  if (result.contains("Reason")) {  throw new CreateFBTypeException("LUA skript for " + fbType.getName() + " FBType not executed"); } } } } } } 
